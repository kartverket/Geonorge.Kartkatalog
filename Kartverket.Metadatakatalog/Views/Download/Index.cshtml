@using Kartverket.Metadatakatalog.Helpers
@using Resources
@using Newtonsoft.Json
@{
    ViewBag.Title = UI.FileDownload;
}
@section breadcrumb {
    <li class="active">@UI.FileDownload</li>
}
<script src="https://unpkg.com/vue@3/dist/vue.global.js"></script>
<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <span class="message"></span>
</div>

<!-- Map modal -->
<script type="text/x-template" id="map-template">
    <div class="map">
        <div class="custom-modal hidden">
            <div class="custom-modal-container">
                <iframe v-if="master" id="masterorderline-iframe" v-bind:src="mapSrc" name="iframe" style="height:100%"></iframe>
                <iframe v-else v-bind:id="$parent.$parent.metadata.uuid + '-iframe'" v-bind:src="mapSrc" name="iframe" style="height:100%"></iframe>
                <div class="modal-footer">
                    <button type="button" v-on:click="$parent.$parent.showMap = false; $root.activeMapUuid = false;" class="btn btn-default" data-dismiss="modal">@UI.Close</button>
                </div>
            </div>
        </div>
    </div>
</script>


<!-- Area select -->
<script type="text/x-template" id="areas-template">
    <div>
        <div class="custom-select-list">
            <div class="custom-select-list-input-container">
                <span v-for="area in selected" class="custom-select-list-selected">
                    {{ area.name }}
                    <span v-show="!master && !area.hasSelectedProjections" data-toggle="tooltip" data-placement="bottom" title="Støttet projeksjon er ikke valgt" class="projection-warning-icon"></span>
                    <span v-show="!master && !area.hasSelectedFormats" data-toggle="tooltip" data-placement="bottom" title="Støttet format er ikke valgt" class="format-warning-icon"></span>
                    <span v-on:click="removeSelectedArea(area)" class="fa fa-times"></span>
                </span>
                <input type="text" autocomplete="no" class="custom-select-list-input" />
            </div>
            <div class="custom-select-list-dropdown-container">
                <div class="custom-select-list-dropdown">
                    <div class="custom-select-list-dropdown-content">
                        <div v-if="available.landsdekkende" class="custom-select-list-option-group">
                            <p class="custom-select-list-option-group-name">@UI.Nationwide</p>
                            <ul class="custom-select-list-options area-option-list">
                                <li v-on:click="selectArea(area)" v-bind:class="{'is-selected': area.isSelected}" v-for="area in available.landsdekkende">{{ area.name }}</li>
                            </ul>
                        </div>
                        <div v-for="(areas, areaType) in available" class="custom-select-list-option-group">
                            <div v-if="areaType !== 'undefined' && areaType !== 'landsdekkende' && (!master || $root.isSupportedType(areaType))" v-show="areas.length">
                                <p class="custom-select-list-option-group-name">{{ areaType }}</p>
                                <ul class="custom-select-list-options area-option-list">
                                    <li v-on:click="selectArea(area)" v-bind:class="{'is-selected': (!master && area.isSelected) || (master && isMasterSelected(area)) }" v-for="area in areas">{{ area.name }}</li>
                                </ul>
                            </div>
                        </div>
                    </div>
                    <div class="custom-select-list-dropdown-additional-options">
                        <a v-show="supportsPolygonSelection" class="btn" v-on:click="$parent.selectFromMap($parent, 'polygon')" title="Velg polygon fra kart" data-toggle="tooltip" data-placement="bottom" v-bind:class="{disabled: !supportsPolygonSelection}"><span class="fa fa-globe"></span> @UI.ChooseFromMap</a>
                        <a v-show="supportsGridSelection" class="btn" v-on:click="$parent.selectFromMap($parent, 'grid')" title="Velg kartblad fra kart" data-toggle="tooltip" data-placement="bottom" v-bind:class="{disabled: !supportsGridSelection}"><span class="fa fa-map"></span> @UI.SelectGrid</a>
                        <form v-if="!master" :id="'clipper-' + $parent.metadata.uuid" style="display:inline">
                            <a style="height: auto" v-show="supportsClipperfile" class="btn" title="Velg klippefil" data-toggle="tooltip" data-placement="bottom" v-bind:class="{disabled: !supportsPolygonSelection}"><span class="fa fa-file"></span> <label for="clipperFile">Klippefil:</label>&nbsp;<input style="display:inline" v-on:change="$parent.validateClipperFile($parent)" type="file" id="clipperFile" name="clipperFileName"></a>
                        </form>
                        <form v-if="master" :id="'clipper-master'" style="display:inline">
                            <a style="height: auto" v-show="supportsClipperfile" class="btn" title="Velg klippefil" data-toggle="tooltip" data-placement="bottom" v-bind:class="{disabled: !supportsPolygonSelection}"><span class="fa fa-file"></span> <label for="clipperFile">Klippefil:</label>&nbsp;<input style="display:inline" v-on:change="$parent.validateClipperFile($parent)" type="file" id="clipperFile" name="clipperFileName" v-bind:master="true"></a>
                        </form>
                        <a v-show="supportsGridSelection" class="btn" v-on:click="$parent.selectAllGrids($parent)" title="Velg alle" data-toggle="tooltip" data-placement="bottom" v-bind:class="{disabled: !supportsGridSelection}"><span class=""></span> @UI.SelectAll</a>
                    </div>
                </div>
            </div>
        </div>
        <div v-if="supportsPolygonSelection && $parent.mapIsLoaded">
            <div v-if="master" v-show="$parent.showMap" is="mapSelect" v-bind:map-data="$parent.mapData" v-bind:map-src="'@Html.SecureNorgeskartUrl()select.html'" v-bind:master="true">
            </div>
        </div>
        <div v-if="supportsPolygonSelection && $parent.mapIsLoaded">
            <div v-if="!master" v-show="$parent.showMap" is="mapSelect" v-bind:map-data="$parent.mapData" v-bind:map-src="'@Html.SecureNorgeskartUrl()select.html'" v-bind:master="false">
            </div>
        </div>
        <div v-if="supportsGridSelection && $parent.mapIsLoaded">
            <div v-if="!master"
                 v-show="$parent.showMap" is="mapSelect"
                 v-bind:map-data="$parent.mapData"
                 v-bind:map-src="'@Html.SecureNorgeskartUrl()' + 'nedlasting.html#' + $parent.mapData.defaultConfigurations.zoom_level + '/' + $parent.mapData.defaultConfigurations.center_longitude + '/' + $parent.mapData.defaultConfigurations.center_latitude + '/' + $parent.mapData.defaultConfigurations.service_name"
                 v-bind:master="false">
            </div>

        </div>
    </div>
</script>


<!-- Projection select -->
<script type="text/x-template" id="projections-template">
    <div class="custom-select-list">
        <div class="custom-select-list-input-container">
            <span v-for="projection in selected" class="custom-select-list-selected">
                {{ projection.name }}
                <span v-on:click="removeSelectedProjection(projection)" class="fa fa-times"></span>
            </span>
            <input type="text" autocomplete="no" class="custom-select-list-input" />
        </div>
        <div class="custom-select-list-dropdown-container">
            <div class="custom-select-list-dropdown">
                <div class="custom-select-list-dropdown-content">
                    <ul class="custom-select-list-options projection-option-list">
                        <li v-on:click="selectProjection(projection)" v-bind:class="{'is-selected': (!master && projection.isSelected) || (master && isMasterSelected(projection))}" v-for="(projection, projectionCode) in available">{{ projection.name }}</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</script>


<!-- Format select -->
<script type="text/x-template" id="formats-template">
    <div class="custom-select-list">
        <div class="custom-select-list-input-container">
            <span v-for="format in selected" class="custom-select-list-selected">
                {{ format.name }}
                <span v-on:click="removeSelectedFormat(format)" class="fa fa-times"></span>
            </span>
            <input type="text" autocomplete="off" class="custom-select-list-input" />
        </div>
        <div class="custom-select-list-dropdown-container">
            <div class="custom-select-list-dropdown">
                <div class="custom-select-list-dropdown-content">
                    <ul class="custom-select-list-options format-option-list">
                        <li v-on:click="selectFormat(format)" v-bind:class="{'is-selected': (!master && format.isSelected) || (master && isMasterSelected(format))}" v-for="(format, formatName) in available">{{ format.name }}</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</script>


<script type="text/x-template" id="order-line-template">
    <div v-bind:class="[expanded ? '' : 'readonly']">
        <h2 v-on:click="expanded = !expanded" class="clickable">
            <span class="expand-arrow" v-bind:class="[expanded ? 'active' : '']"></span> {{ metadata.name }}
        </h2>
        <div class="pull-right margin-top-10">
            <span v-show="hasInfoMessages" class="orderline-field-counter">
                <span v-on:click="expanded = true" class="custom-icon custom-icon-info" data-toggle="tooltip" data-placement="bottom" title="@UI.DisplayMessages">
                    <span class="custom-icon-overlay">{{ numberOfInfoMessages }}</span>
                </span>
            </span>
            <span v-show="!hasAreas" class="orderline-field-counter">
                <span v-on:click="expanded = true" class="custom-icon custom-icon-danger" data-toggle="tooltip" data-placement="bottom" title="@UI.DisplayErrors">
                </span>
            </span>
            <span v-show="hasErrors" class="orderline-field-counter">
                <span v-on:click="expanded = true" class="custom-icon custom-icon-warning" data-toggle="tooltip" data-placement="bottom" title="@UI.DisplayErrors">
                    <span class="custom-icon-overlay">{{ numberOfErrors }}</span>
                </span>
            </span>
            <span v-show="!hasErrors" class="orderline-field-counter">
                <span class="custom-icon custom-icon-checked" data-toggle="tooltip" data-placement="bottom" title="@UI.DatasetIsCorrect">
                </span>
            </span>
            <a v-bind:href="metadata.url" data-toggle="tooltip" data-placement="bottom center" track title="@Html.Raw(UI.NavigateToDataset)" class="btn icon-btn"><span class="fa fa-home"></span></a>
            <span v-on:click="$root.removeOrderLine(metadata.uuid, false)" data-toggle="tooltip" data-placement="bottom" title="@UI.DeleteDataset" class="btn icon-btn"><span class="fa fa-trash"></span></span>
        </div>
        <div class="clearfix"></div>
        <div v-show="expanded">
            <div class="row orderline-fields">
                <div class="col-md-4 orderline-field">
                    <p>@UI.Facet_area  <a href="https://www.geonorge.no/aktuelt/om-geonorge/slik-bruker-du-geonorge/omradeinndelinger/" target="_blank" title="Link til områder  - en forklaring"><span class="badge help-text-toggle clickable">?</span></a></p></p>
                    <div v-if="!hasAreas" class="help-text form-element-help-text bg-danger"><span>@UI.NoAreasAreAvailable</span></div>
                    <div v-else is="areas" v-bind:available="availableAreas" v-bind:selected="selectedAreas" v-bind:master="master" v-bind:class="[orderLineErrors && orderLineErrors.area && orderLineErrors.area.length ? 'hasError' : '']"></div>
                    <div v-if="orderLineErrors && orderLineErrors.area && hasAreas" class="orderline-errors margin-top-10">
                        <div v-for="orderlineError in orderLineErrors.area" class="help-text form-element-help-text bg-danger">
                            {{ orderlineError }}
                        </div>
                    </div>
                    <div v-if="notAvailableSelectedAreas && notAvailableSelectedAreas.length" class="orderline-errors margin-top-10">
                        <div class="help-text form-element-help-text bg-info">
                            {{ notAvailableSelectedAreas.length }} {{notAvailableSelectedAreas.length == 1 ? "@UI.SelectedArea" : "@UI.SelectedAreas"}} @UI.IsNotAvailable
                        </div>
                    </div>
                </div>
                <div class="col-md-4 orderline-field">
                    <p>@UI.Projection <a href="https://www.geonorge.no/aktuelt/om-geonorge/slik-bruker-du-geonorge/kartprojeksjoner-og-koordinatsystemer/" target="_blank" title="Link til projeksjoner  - en forklaring"><span class="badge help-text-toggle clickable">?</span></a></p>
                    <div v-if="Object.keys(availableProjections).length === 0" class="help-text form-element-help-text bg-info"><span>@UI.AreaMustBeSelectedFirst</span></div>
                    <div v-else is="projections" v-bind:available="availableProjections" v-bind:selected="selectedProjections" v-bind:master="master" v-bind:class="[orderLineErrors && orderLineErrors.projection && orderLineErrors.projection.length ? 'hasError' : '']"></div>

                    <div v-if="orderLineErrors && orderLineErrors.projection" class="orderline-errors margin-top-10">
                        <div v-show="orderLineErrors.projection.length" class="help-text form-element-help-text bg-danger">
                            <span class="custom-icon projection-warning-icon"></span> @UI.MissingProjectionFor {{ orderLineErrors.projection.length }} {{orderLineErrors.projection.length == 1 ? "@UI.Area" : "@UI.Areas"}}
                        </div>
                    </div>
                    <div v-if="orderLineInfoMessages && orderLineInfoMessages.projection" class="orderline-errors margin-top-10">
                        <div v-show="orderLineInfoMessages.projection.length" class="help-text form-element-help-text bg-info">
                            {{ orderLineInfoMessages.projection.length }} {{orderLineInfoMessages.projection.length == 1 ? "@UI.SelectedProjection" : "@UI.SelectedProjections"}} @UI.DoesNotMatchCommonChoice
                        </div>
                    </div>
                    <div v-if="notAvailableSelectedProjections && notAvailableSelectedProjections.length" class="orderline-errors margin-top-10">
                        <div class="help-text form-element-help-text bg-info">
                            {{ notAvailableSelectedProjections.length }} {{notAvailableSelectedProjections.length == 1 ? "@UI.SelectedProjection" : "@UI.SelectedProjections"}} @UI.IsNotAvailable
                        </div>
                    </div>
                </div>
                <div class="col-md-4 orderline-fields">
                    <p>Format  <a href="https://www.geonorge.no/aktuelt/om-geonorge/slik-bruker-du-geonorge/formater/" target="_blank" title="Link til formater  - en forklaring"><span class="badge help-text-toggle clickable">?</span></a></p></p>
                    <div v-if="Object.keys(availableFormats).length === 0" class="help-text form-element-help-text bg-info"><span>@UI.AreaMustBeSelectedFirst</span></div>
                    <div v-else is="formats" v-bind:available="availableFormats" v-bind:selected="selectedFormats" v-bind:master="master" v-bind:class="[orderLineErrors && orderLineErrors.format && orderLineErrors.format.length ? 'hasError' : '']"></div>

                    <div v-if="orderLineErrors && orderLineErrors.format" class="orderline-errors margin-top-10">
                        <div v-show="orderLineErrors.format.length" class="help-text form-element-help-text bg-danger">
                            <span class="custom-icon format-warning-icon"></span> @UI.MissingFormatFor {{ orderLineErrors.format.length }} {{orderLineErrors.format.length == 1 ? "@UI.Area" : "@UI.Areas"}}
                        </div>
                    </div>
                    <div v-if="orderLineInfoMessages && orderLineInfoMessages.format" class="orderline-errors margin-top-10">
                        <div v-show="orderLineInfoMessages.format.length" class="help-text form-element-help-text bg-info">
                            {{ orderLineInfoMessages.format.length }} {{orderLineInfoMessages.format.length == 1 ? "@UI.SelectedFormat" : "@UI.SelectedFormats"}} @UI.DoesNotMatchCommonChoice
                        </div>
                    </div>
                    <div v-if="notAvailableSelectedFormats && notAvailableSelectedFormats.length" class="orderline-errors margin-top-10">
                        <div class="help-text form-element-help-text bg-info">
                            {{ notAvailableSelectedFormats.length }} {{notAvailableSelectedFormats.length == 1 ? "@UI.SelectedFormat" : "@UI.SelectedFormats"}} @UI.IsNotAvailable
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</script>

<script type="text/x-template" id="master-order-line-template">
    <div>
        <h2>@UI.DownloadOrderLineHeader</h2>
        <div class="row">
            <div class="col-md-4">
                <p>@UI.Facet_area <span href="#" v-on:click="showAreaHelpText = !showAreaHelpText" v-bind:class="{active: showAreaHelpText}" class="badge help-text-toggle clickable">?</span></p>
                <div is="areas" v-bind:available="availableAreas" v-bind:selected="selectedAreas" v-bind:master="master"></div>
                <div v-show="showAreaHelpText" class="help-text form-element-help-text bg-info margin-top-10">
                    @Html.Raw(UI.AreaHelpText)
                </div>
            </div>
            <div class="col-md-4">
                <p>@UI.Projection <span href="#" v-on:click="showProjectionHelpText = !showProjectionHelpText" v-bind:class="{active: showProjectionHelpText}" class="badge help-text-toggle clickable">?</span></p>
                <div v-if="Object.keys(availableProjections).length === 0" class="help-text form-element-help-text bg-info"><span>@UI.AreaMustBeSelectedFirst</span></div>
                <div v-else is="projections" v-bind:available="availableProjections" v-bind:selected="selectedProjections" v-bind:master="master"></div>
                <div v-show="showProjectionHelpText" class="help-text form-element-help-text bg-info margin-top-10">
                    @Html.Raw(UI.ProjectionHelpText)
                </div>
            </div>
            <div class="col-md-4">
                <p>Format <span href="#" v-on:click="showFormatHelpText = !showFormatHelpText" v-bind:class="{active: showFormatHelpText}" class="badge help-text-toggle clickable">?</span></p>
                <div v-if="Object.keys(availableFormats).length === 0" class="help-text form-element-help-text bg-info"><span>@UI.AreaMustBeSelectedFirst</span></div>
                <div v-else is="formats" v-bind:available="availableFormats" v-bind:selected="selectedFormats" v-bind:master="master"></div>
                <div v-show="showFormatHelpText" class="help-text form-element-help-text bg-info margin-top-10">
                    @Html.Raw(UI.FormatHelpText)
                </div>
            </div>
        </div>
    </div>
</script>


<div id="vueContainer">
    <div class="loading-animation" v-show="!contentLoaded">
        Laster inn til nedlasting
    </div>
    <div v-show="contentLoaded" style="display: none">
        <section class="heading">
            <div class="row">
                <div class="col-sm-12">
                    <h1 v-show="!orderResponse.length">@UI.FileDownloadOrder</h1>
                    <h1 v-show="orderResponse.length">@UI.FileDownloadDownload</h1>
                </div>
                <div class="col-sm-12">
                    <span class="separator-lg"></span>
                </div>
            </div>
        </section>

        <article id="orderlist" v-show="orderLines.length && !orderResponse.length">

            <div class="intro-text">
                @Html.Raw(UI.FileDownloadIntro)
                <p>
                    <a style="font-size: 12pt" href="https://www.geonorge.no/aktuelt/om-geonorge/slik-bruker-du-geonorge/laste-ned-data/">Les mer om å laste ned data</a>
                </p>
            </div>
            <div id="downloadformVue" class="download-form">
                <div v-show="showMasterOrderLine" class="orderline orderline-master">
                    <div is="masterOrderLine"
                         v-bind:all-available-areas="masterOrderLine.allAvailableAreas"
                         v-bind:available-areas="masterOrderLine.masterAvailableAreas"
                         v-bind:available-projections="masterOrderLine.masterAvailableProjections"
                         v-bind:available-formats="masterOrderLine.masterAvailableFormats"
                         v-bind:all-selected-areas="masterOrderLine.allSelectedAreas"
                         v-bind:all-selected-projections="masterOrderLine.allSelectedProjections"
                         v-bind:all-selected-formats="masterOrderLine.allSelectedFormats"
                         v-bind:selected-areas="masterOrderLine.masterSelectedAreas"
                         v-bind:selected-projections="masterOrderLine.masterSelectedProjections"
                         v-bind:selected-formats="masterOrderLine.masterSelectedFormats"
                         v-bind:all-order-line-errors="masterOrderLine.allOrderLineErrors">

                    </div>
                </div>
                <div class="orderlines">
                    <div v-for="(orderLine, index) in orderLines" class="orderline">
                        <div is="orderLine"
                             v-bind:metadata="orderLine.metadata"
                             v-bind:capabilities="orderLine.capabilities"
                             v-bind:available-areas="masterOrderLine.allAvailableAreas[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allAvailableAreas[orderLine.metadata.uuid] : []"
                             v-bind:available-projections="masterOrderLine.allAvailableProjections[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allAvailableProjections[orderLine.metadata.uuid] : []"
                             v-bind:available-formats="masterOrderLine.allAvailableFormats[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allAvailableFormats[orderLine.metadata.uuid] : []"
                             v-bind:selected-areas="masterOrderLine.allSelectedAreas[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allSelectedAreas[orderLine.metadata.uuid] : []"
                             v-bind:selected-projections="masterOrderLine.allSelectedProjections[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allSelectedProjections[orderLine.metadata.uuid] : []"
                             v-bind:selected-formats="masterOrderLine.allSelectedFormats[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allSelectedFormats[orderLine.metadata.uuid] : []"
                             v-bind:selected-coordinates="masterOrderLine.allSelectedCoordinates[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allSelectedCoordinates[orderLine.metadata.uuid] : ''"
                             v-bind:selected-clipperfiles="masterOrderLine.allSelectedClipperFiles[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allSelectedClipperFiles[orderLine.metadata.uuid] : ''"
                             v-bind:default-projections="masterOrderLine.allDefaultProjections[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allDefaultProjections[orderLine.metadata.uuid] : []"
                             v-bind:default-formats="masterOrderLine.allDefaultFormats[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allDefaultFormats[orderLine.metadata.uuid] : []"
                             v-bind:order-line-errors="masterOrderLine.allOrderLineErrors[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allOrderLineErrors[orderLine.metadata.uuid] : {}"
                             v-bind:order-line-info-messages="masterOrderLine.allOrderLineInfoMessages[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allOrderLineInfoMessages[orderLine.metadata.uuid] : {}"
                             v-bind:not-available-selected-areas="masterOrderLine.allNotAvailableSelectedAreas[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allNotAvailableSelectedAreas[orderLine.metadata.uuid] : []"
                             v-bind:not-available-selected-projections="masterOrderLine.allNotAvailableSelectedProjections[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allNotAvailableSelectedProjections[orderLine.metadata.uuid] : []"
                             v-bind:not-available-selected-formats="masterOrderLine.allNotAvailableSelectedFormats[orderLine.metadata.uuid] !== undefined ? masterOrderLine.allNotAvailableSelectedFormats[orderLine.metadata.uuid] : []">
                        </div>
                    </div>
                </div>
                <div class="download-form">
                    <div class="row">
                        <div class="col-md-4">
                            <p>@UI.SelectDownloadUsegroup: <span class="required-indicator"></span></p>
                            <div class="form-group">
                                <div class="custom-select">
                                    <select v-model="usageGroup" class="form-control">
                                        <option v-for="(item, key) in usageGroupsAvailable" v-bind:value="key">
                                            {{ item }}
                                        </option>
                                    </select>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <p>@UI.SelectDownloadPurpose: <span class="required-indicator"></span></p>
                            <div class="custom-select-list">
                                <div class="custom-select-list-input-container">
                                    <span v-for="(purpose, index) in usagePurposes" class="custom-select-list-selected">
                                        {{ getPurposeName(purpose) }}
                                        <span v-on:click="removeSelectedPurpose(index)" class="fa fa-times"></span>
                                    </span>
                                    <input type="text" autocomplete="no" class="custom-select-list-input" />
                                </div>
                                <div class="custom-select-list-dropdown-container">
                                    <div class="custom-select-list-dropdown">
                                        <div class="custom-select-list-dropdown-content">
                                            <ul class="custom-select-list-options usagePurposes-option-list">
                                                <li v-on:click="selectPurpose(purposeName, purpose)" v-bind:class="{'is-selected': purposeIsSelected(purpose)}" v-for="(purposeName, purpose) in usagePurposesAvailable">{{ purposeName }}</li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <p>&nbsp;</p>
                        </div>
                    </div>
                    <div v-show="emailRequired" class="row margin-bottom-10">
                        <div id="emailField" class="col-sm-6 margin-bottom-10">
                            <p class="article-p">@UI.Email: <span class="required-indicator"></span><small>(@UI.PrivacyEmailRequiredCropping)</small></p>
                            <input type="text" v-model="email" name="email" v-on:blur="checkEmailAddress()" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="pull-right">
                                    <a class="btn" id="remove-all-items"><span class="fa fa-trash"></span> @UI.RemoveAll</a>
                                    <a href="/" class="btn"><span class="fa fa-shopping-cart"></span> @UI.OrderMore</a>
                                    <button v-on:click="sendRequests()" v-bind:disabled="!formIsValid()" class="btn"><span class="fa fa-save"></span> @UI.Download</button>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                        </div>
                    </div>

                    <div class="modal" id="remove-all-items-modal">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                    <h4 class="modal-title" id="myModalLabel">@UI.RemovalOfDataset</h4>
                                </div>
                                <div class="modal-body">
                                    @UI.RemoveAllDatasetsConfirm
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn" data-dismiss="modal">@UI.No</button>
                                    <button type="button" v-on:click="removeAllOrderLines()" id="remove-all-items-submit" class="btn">@UI.Yes</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </article>

        <article v-show="!orderLines.length && !orderResponse.length">
            <div class="row">
                <div class="col-md-12">
                    <p>@UI.NoElementsInBasket</p>
                </div>
            </div>
        </article>

        <article v-show="orderResponse.length && !orderResponse[0].data.files.length">
            <div class="row">
                <div class="col-md-12">
                    <p>Ingen filer å laste ned, vennligst prøv med andre valg</p>
                </div>
            </div>
        </article>

        <article id="responseList" v-show="orderResponseGrouped.length">
            <div class="row">
                <div class="col-md-12">
                    <div v-for="responseItem in orderResponseGrouped" class="distribution-group-container">
                        <div class="orderlines panel panel-primary">
                            <div class="panel-heading">{{ responseItem.additionalInfo.distributedBy }}</div>
                            <div class="panel-body">
                                <div v-for="(dataset, datasetName) in responseItem.datasets">
                                    <h2>{{ datasetName }}</h2>
                                    <div v-if="file.status == 'ReadyForDownload'" v-for="file in dataset.files" class="download-list-subitem">
                                        <div class="row">
                                            <div class="col-sm-5 col-md-6">
                                                <span class="download-list-item-name">
                                                    <span class="inline-block">
                                                        <a v-bind:href="AddAccessToken(file.downloadUrl)" data-toggle="tooltip" data-placement="bottom" v-bind:title="file.name">
                                                            {{ file.areaName }}
                                                        </a>
                                                    </span>
                                                </span>
                                            </div>
                                            <div class="col-sm-4 col-md-3">
                                                <span class="label label-success auto-width">{{ file.projectionName }}</span>
                                            </div>
                                            <div class="col-sm-2 col-md-2">
                                                <span class="label label-info auto-width">{{file.format}}</span>
                                            </div>
                                            <div class="col-sm-1 col-md-1 icon-col">
                                                <a v-bind:href="AddAccessToken(file.downloadUrl)" data-toggle="tooltip" data-placement="bottom" v-bind:title="file.name" class="btn">
                                                    <span class="custom-icon custom-icon-lastned"></span>
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                    <div v-if="file.status == 'WaitingForProcessing'" v-for="file in dataset.files" class="download-list-subitem">
                                        <div class="row">
                                            <div class="col-sm-5 col-md-6">

                                                <span class="download-list-item-name">
                                                    {{ file.metadataName }}, <span class="inline-block">@UI.SelectedFromMap {{ file.areaName }}</span> <small class="inline-block">(Under behandling)</small>
                                                </span>
                                            </div>
                                            <div class="col-sm-4 col-md-3">
                                                <span class="label label-success auto-width">{{ file.projectionName }}</span>
                                            </div>
                                            <div class="col-sm-2 col-md-2">
                                                <span class="label label-info auto-width">{{file.format}}</span>
                                            </div>
                                            <div class="col-sm-1 col-md-1 icon-col">
                                                <span class="custom-icon custom-icon-info"></span>
                                            </div>
                                        </div>
                                    </div>
                                    <div v-if="!file.status && file.name" v-for="file in dataset.files" class="list-group-subitem">
                                        <div class="row">
                                            <div class="col-sm-12 col-md-12">
                                                <span class="custom-icon custom-icon-info"></span>
                                                <span class="download-list-item-name">
                                                    {{ file.name }}
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="panel-footer" v-if="responseItem.additionalInfo.supportsDownloadBundling && responseItem.numberOfFiles > 1">
                                <div class="input-group">
                                    <span class="input-group-addon">@UI.Email: <span class="required-indicator"></span><small>(@UI.PrivacyEmailRequiredBundling)</small></span>
                                    <input type="text" v-model="email" name="email" class="form-control" />
                                    <span v-on:click="sendOrderBundleRequest(responseItem)" v-bind:class="{disabled: !emailAddressIsValid(email)}" class="input-group-addon btn" v-bind:id="'order-bundle-button-' + responseItem.additionalInfo.distributedBy">Bestill pakke med alle datasett</span>
                                </div>
                                <div v-bind:id="'order-bundle-message-' + responseItem.additionalInfo.distributedBy" class="">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>
</div>
<script>
    var downloadUseGroups = @Html.Raw(JsonConvert.SerializeObject(ViewBag.DownloadUseGroups));
    var downloadPurposes = @Html.Raw(JsonConvert.SerializeObject(ViewBag.DownloadPurposes));
    var downloadSoftwareClient = 'Kartkatalogen';
    var downloadSoftwareClientVersion = '@Html.ApplicationVersionNumber()';
    var downloadUrl = '@Html.DownloadUrl()';
</script>
@section scripts{
    @Scripts.Render("~/Content/download");
    @Scripts.Render("~/bundles/shopping-cart");
}
