@using Resources
<script type="text/x-template" id="showInMapButtonTemplate">
    <div v-on:click="addToMap()" class="text-center" v-html="htmlElement"></div>
</script>

<script>
    var ShowInMapButton = {
        name: "showInMapButton",
        template: "#showInMapButtonTemplate",
        props: ["resultItem", "defaultButtonClass", "buttonType"],
        computed: {
            button: function () {
                var button = {
                    id: "mapmacrolink-" + this.resultItem.Uuid,
                    content: "@Html.Raw(UI.Display) @Html.Raw(UI.InMap)",
                    className: this.defaultButtonClass,
                    url: null,
                    title: "@Html.Raw(UI.Display) " + this.resultItem.Title + " @Html.Raw(UI.InMap)",
                    icon: {
                        id: "mapmacro-button-" + this.resultItem.Uuid,
                        className: "custom-icon"
                    },
                    attributes: [
                        { key: "onClick", value: "ga('send', 'event', 'Nedlasting', 'viskart')" },
                        { key: "target", value: "_blank" }
                    ]
                };

                if (this.resultItem.ShowMapLink || this.resultItem.ShowServiceMapLink) {
                    if (this.isRestrictedService()) {
                        button.icon.className += " custom-icon-kartmarkoer-warning";
                        button.title = "@Html.Raw(UI.Service_need_permission)";
                    } else {
                        button.icon.className += " custom-icon-kartmarkoer";
                    }
                } else {
                    button.className += " disabled";
                    button.icon.className += " custom-icon-kartmarkoer";
                    button.id = "";
                    button.title = "@Html.Raw(UI.ServiceCannotBeDisplayedMap)";
                    button.icon.id = "";
                    button.attributes = [];
                }

                button.className += ' show-in-map-btn-' + this.resultItem.Uuid;

                if (this.buttonType === "tableRow") {
                    button.content = "";
                }

                if (this.resultItem.ShowMapLink || this.resultItem.ShowServiceMapLink) {
                    this.getServiceStatus();
                }

                return button;
            },
            htmlElement: function () {
                return this.$parent.createButtonElement(this.button);
            }
        },
        methods: {
            addToMap: function () {
                var mapItems = localStorage.mapItems ? JSON.parse(localStorage.mapItems) : [];
                mapItems.push({
                    name: this.resultItem.Title,
                    url: this.resultItem.MapUrl
                });
                localStorage.mapItems = JSON.stringify(mapItems);
            },
            isRestrictedService: function () {
                if (this.resultItem.IsRestricted) {
                    return true;
                }
                else if (this.resultItem.ServiceDistributionAccessConstraint == "Beskyttet" ||
                    this.resultItem.ServiceDistributionAccessConstraint == "restricted" ||
                    this.resultItem.ServiceDistributionAccessConstraint == "norway digital restricted") {
                    return true;
                }
                else {
                    return false;
                }
            },
            getServiceStatus: function () {
                if (this.resultItem.ServiceUuid !== undefined && this.resultItem.ServiceUuid !== null) {
                    $.getJSON(statusApi + "monitorApi/serviceDetail?uuid=" + this.resultItem.ServiceUuid, function (result) {
                        try {
                            var vurderingIsDefined = result.connect !== undefined && result.connect.vurdering !== undefined;
                            var numLayersIsDefined = result.numLayers !== undefined && result.numLayers.svar !== undefined;
                            var statusOK = vurderingIsDefined && result.connect.vurdering != "no";
                            var numLayers = parseInt(numLayersIsDefined ? result.numLayers.svar : 0);
                            if (!statusOK) {
                                this.button.className += " disabled";
                                this.button.icon.className = "custom-icon custom-icon-kartmarkoer-unavailable";
                                this.button.url = null;
                                this.button.title = "Tjenesten er utilgjengelig for øyeblikket";
                                this.button.attributes = [{ key: "disabled", value: "disabled" }];
                                $(".show-in-map-btn-" + this.resultItem.Uuid).addClass("disabled");
                                $(".show-in-map-btn-" + this.resultItem.Uuid).attr("disabled", "disabled");
                                $(".show-in-map-btn-" + this.resultItem.Uuid).attr("href", "");
                                $(".show-in-map-btn-" + this.resultItem.Uuid).attr("title", "@Html.Raw(UI.ServiceNotavailable)");
                                $(".show-in-map-btn-" + this.resultItem.Uuid).attr("data-original-title", "@Html.Raw(UI.ServiceNotavailable)");
                                $(".show-in-map-btn-" + this.resultItem.Uuid + " > span").attr("class", "custom-icon custom-icon-kartmarkoer-unavailable");
                            }
                            else if (numLayers > 30) {
                                this.button.icon.className = "custom-icon custom-icon-kartmarkoer-warning";
                                $(".show-in-map-btn-" + this.resultItem.Uuid + " > span").attr("class", "custom-icon custom-icon-kartmarkoer-warning");
                                if (this.isRestrictedService()) {
                                    this.button.title = "@Html.Raw(UI.ServiceSlowAndSpecialAccess)";
                                    $(".show-in-map-btn-" + this.resultItem.Uuid).attr("title", "@Html.Raw(UI.ServiceSlowAndSpecialAccess)");
                                    $(".show-in-map-btn-" + this.resultItem.Uuid).attr("data-original-title", "@Html.Raw(UI.ServiceSlowAndSpecialAccess)");
                                } else {
                                    this.button.title = "Tjenesten kan være treg å vise";
                                    $(".show-in-map-btn-" + this.resultItem.Uuid).attr("title", "@Html.Raw(UI.ServiceSlow)");
                                    $(".show-in-map-btn-" + this.resultItem.Uuid).attr("data-original-title", "@Html.Raw(UI.ServiceSlow)");
                                }

                            }
                        }
                        catch (err) {
                            console.log(err);
                        }
                    }.bind(this));
                }
            }
        }
    };
</script>
